---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint
platforms:
  # 0.11.0.3
  - name: zookeeper-01103
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-01103
  - name: kafka1-01103
    image: wurstmeister/kafka:2.11-0.11.0.3
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-01103:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-01103
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
  - name: kafka2-01103
    image: wurstmeister/kafka:2.11-0.11.0.3
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-01103:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-01103
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
  # 1.1.1
  - name: zookeeper-111
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-111
  - name: kafka1-111
    image: wurstmeister/kafka:2.11-1.1.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-111:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-111
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
  - name: kafka2-111
    image: wurstmeister/kafka:2.11-1.1.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-111:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-111
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
  # 2.2.1
  - name: zookeeper-221
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-221
  - name: kafka1-221
    image: wurstmeister/kafka:2.12-2.2.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-221:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-221
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
  - name: kafka2-221
    image: wurstmeister/kafka:2.12-2.2.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://_{HOSTNAME_COMMAND}:9092,SASL_PLAINTEXT://_{HOSTNAME_COMMAND}:9094
      KAFKA_LISTENERS: PLAINTEXT://:9092,SASL_PLAINTEXT://:9094
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-221:2181
      KAFKA_AUTHORIZER_CLASS_NAME: kafka.security.auth.SimpleAclAuthorizer
      KAFKA_SUPER_USERS: User:admin
      KAFKA_SASL_ENABLED_MECHANISMS: PLAIN
      KAFKA_SASL_MECHANISM_INTER_BROKER_PROTOCOL: PLAIN
      KAFKA_ALLOW_EVERYONE_IF_NO_ACL_FOUND: "true"
      KAFKA_OPTS: -Djava.security.auth.login.config=/opt/kafka/jaas/kafka_server_jaas.conf
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-221
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
      - ./kafka_server_jaas.conf:/opt/kafka/jaas/kafka_server_jaas.conf
provisioner:
  name: ansible
  config_options:
    defaults:
      fact_caching: jsonfile
      fact_caching_connection: ./ansible_cache
  lint:
    name: ansible-lint
  inventory:
    group_vars:
      all:
        ansible_kafka_supported_versions:
          - protocol_version: "0.11.0"
            instance_suffix: "01103"
          - protocol_version: "1.1.1"
            instance_suffix: "111"
          - protocol_version: "2.2.1"
            instance_suffix: "221"
        topic_defaut_configuration:
          state: 'present'
          replica_factor: 1
          partitions: 1
          options: {}
# In order to avoid code duplication and to reduce
# the time needed to do every tests, `create`, `prepare`
# and `converge` sequences are only used.
scenario:
  name: default
  create_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
  converge_sequence:
    - converge
    - idempotence
    - side_effect
    - verify
verifier:
  name: testinfra
  options:
    s: true
    l: true
  lint:
    name: flake8
