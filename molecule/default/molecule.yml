---
dependency:
  name: galaxy
driver:
  name: docker
lint:
  name: yamllint
platforms:
  # 0.11.0.3
  - name: zookeeper-01103
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-01103
  - name: kafka1-01103
    image: wurstmeister/kafka:2.11-0.11.0.3
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-01103:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-01103
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  - name: kafka2-01103
    image: wurstmeister/kafka:2.11-0.11.0.3
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-01103:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-01103
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # 1.0.2
  - name: zookeeper-102
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-102
  - name: kafka1-102
    image: wurstmeister/kafka:2.11-1.0.2
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-102:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-102
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  - name: kafka2-102
    image: wurstmeister/kafka:2.11-1.0.2
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-102:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-102
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # 1.1.1
  - name: zookeeper-111
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-111
  - name: kafka1-111
    image: wurstmeister/kafka:2.11-1.1.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-111:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-111
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  - name: kafka2-111
    image: wurstmeister/kafka:2.11-1.1.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-111:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-111
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  # 2.0.1
  - name: zookeeper-201
    image: zookeeper:3.4
    command: "bin/zkServer.sh start-foreground"
    published_ports:
      - "2181"
    networks:
      - name: molecule
        aliases:
          - zookeeper-201
  - name: kafka1-201
    image: wurstmeister/kafka:2.11-2.0.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-201:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-201
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
  - name: kafka2-201
    image: wurstmeister/kafka:2.11-2.0.1
    command: "start-kafka.sh"
    env:
      HOSTNAME_COMMAND: "hostname -i | cut -d' ' -f1"
      KAFKA_DELETE_TOPIC_ENABLE: "true"
      KAFKA_ADVERTISED_PORT: "9092"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper-201:2181
    published_ports:
      - "9092"
    networks:
      - name: molecule
        links:
          - zookeeper-201
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
provisioner:
  name: ansible
  config_options:
    defaults:
      fact_caching: jsonfile
      fact_caching_connection: ./ansible_cache
  lint:
    name: ansible-lint
  inventory:
    group_vars:
      all:
        ansible_kafka_supported_versions:
          - protocol_version: "0.11.0"
            instance_suffix: "01103"
          - protocol_version: "1.0.2"
            instance_suffix: "102"
          - protocol_version: "1.1.1"
            instance_suffix: "111"
          - protocol_version: "2.0.1"
            instance_suffix: "201"
        topic_defaut_configuration:
          state: 'present'
          replica_factor: 1
          partitions: 1
          options: {}
# In order to avoid code duplication and to reduce
# the time needed to do every tests, `create`, `prepare`
# and `converge` sequences are only used.
scenario:
  name: default
  create_sequence:
    - lint
    - destroy
    - dependency
    - syntax
    - create
    - prepare
  converge_sequence:
    - converge
    - idempotence
    - side_effect
    - verify
verifier:
  name: testinfra
  options:
    s: true
    l: true
  lint:
    name: flake8
