---
- name: Converge
  hosts: localhost
  vars:
    bootstrap_plain: >-
      {{ hostvars['kafka1-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:9092,
      {{ hostvars['kafka2-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:9092
    bootstrap_sasl: >-
      {{ hostvars['kafka1-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:9094,
      {{ hostvars['kafka2-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:9094
  tasks:
    - name: update replica factor
      block:
        - name: set fact for current test
          set_fact:
            topic_defaut_configuration: "{{ topic_defaut_configuration | combine({ 'replica_factor': 2}) }}"
            cacheable: "yes"
        - name: update replica factor
          kafka_lib:
            resource: "topic"
            api_version: "{{ item.protocol_version }}"
            name: "{{ topic_name }}"
            partitions: "{{ topic_defaut_configuration.partitions }}"
            replica_factor: "{{ topic_defaut_configuration.replica_factor }}"
            state: "{{  topic_defaut_configuration.state }}"
            zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
            bootstrap_servers: "{{ bootstrap_plain }}"
          with_items: "{{ ansible_kafka_supported_versions }}"
        - name: wait for replica factor update completion
          pause:
            seconds: 10
      tags: test_replica_factor

    - name: update partitions
      block:
        - name: set fact for current test
          set_fact:
            topic_defaut_configuration: "{{ topic_defaut_configuration | combine({ 'partitions': 2  }) }}"
            cacheable: "yes"
        - name: update partitions
          kafka_lib:
            resource: 'topic'
            api_version: "{{ item.protocol_version }}"
            name: "{{ topic_name }}"
            partitions: "{{ topic_defaut_configuration.partitions }}"
            replica_factor: "{{ topic_defaut_configuration.replica_factor }}"
            state: "{{  topic_defaut_configuration.state }}"
            zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
            bootstrap_servers: "{{ bootstrap_plain }}"
          with_items: "{{ ansible_kafka_supported_versions }}"
        - name: wait for partition update completion
          pause:
            seconds: 10
      tags: test_partitions

    - name: add options
      block:
        - name: set fact for current test
          set_fact:
            topic_defaut_configuration: "{{ topic_defaut_configuration | combine({ 'options': { 'retention.ms': 66574936, 'flush.ms': 564939 }}) }}"
            cacheable: 'yes'
        - name: add options
          kafka_lib:
            resource: 'topic'
            api_version: "{{ item.protocol_version }}"
            name: "{{ topic_name }}"
            partitions: "{{ topic_defaut_configuration.partitions }}"
            replica_factor: "{{ topic_defaut_configuration.replica_factor }}"
            options: "{{ topic_defaut_configuration.options }}"
            state: "{{  topic_defaut_configuration.state }}"
            zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
            bootstrap_servers: "{{ bootstrap_plain }}"
          with_items: "{{ ansible_kafka_supported_versions }}"
        - name: wait for add options completion
          pause:
            seconds: 10
      tags: test_options

    - name: delete topic
      block:
        - name: set fact for current test
          set_fact:
            topic_defaut_configuration: "{{ topic_defaut_configuration | combine({'state': 'absent'}) }}"
            cacheable: 'yes'
        - name: delete topic
          kafka_lib:
            resource: 'topic'
            api_version: "{{ item.protocol_version }}"
            name: "{{ topic_name }}"
            state: "{{  topic_defaut_configuration.state }}"
            zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
            bootstrap_servers: "{{ bootstrap_plain }}"
          with_items: "{{ ansible_kafka_supported_versions }}"
        - name: wait for topic deletion completion
          pause:
            seconds: 10
      tags:
        - test_delete
        - test_check_mode_topic_create

    - name: acl create
      block:
        - name: set fact for current test
          set_fact:
            acl_defaut_configuration: "{{ acl_defaut_configuration | combine({'state': 'present'}) }}"
            cacheable: 'yes'
        - name: create acl
          kafka_lib:
            resource: 'acl'
            api_version: "{{ item.protocol_version }}"
            acl_resource_type: "topic"
            name: "*"
            acl_principal: "User:common"
            acl_operation: "write"
            acl_permission: "allow"
            state: "present"
            bootstrap_servers: "{{ bootstrap_sasl }}"
            security_protocol: SASL_PLAINTEXT
            sasl_plain_username: admin
            sasl_plain_password: admin-secret
          with_items: "{{ ansible_kafka_supported_versions }}"
      tags:
        - test_acl_create
        - test_check_mode_acl_delete

    - name: acl delete
      block:
        - name: set fact for current test
          set_fact:
            acl_defaut_configuration: "{{ acl_defaut_configuration | combine({'state': 'absent'}) }}"
            cacheable: 'yes'
        - name: delete acl
          kafka_lib:
            resource: 'acl'
            api_version: "{{ item.protocol_version }}"
            acl_resource_type: "topic"
            name: "*"
            acl_principal: "User:common"
            acl_operation: "write"
            acl_permission: "allow"
            state: "absent"
            bootstrap_servers: "{{ bootstrap_sasl }}"
            security_protocol: SASL_PLAINTEXT
            sasl_plain_username: admin
            sasl_plain_password: admin-secret
          with_items: "{{ ansible_kafka_supported_versions }}"
      tags:
        - test_acl_delete
        - test_check_mode_acl_create

    - name: create topic for check mode tests
      block:
        - name: set fact for current test
          set_fact:
            topic_defaut_configuration: "{{ topic_defaut_configuration | combine({'state': 'present'}) }}"
            cacheable: 'yes'
        - name: create topic for check mode tests
          kafka_lib:
            resource: "topic"
            api_version: "{{ item.protocol_version }}"
            name: "{{ topic_name }}"
            partitions: "{{ topic_defaut_configuration.partitions }}"
            replica_factor: "{{ topic_defaut_configuration.replica_factor }}"
            options: "{{ topic_defaut_configuration.options|default({}) }}"
            state: present
            zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
            bootstrap_servers: "{{ bootstrap_plain }}"
          with_items: "{{ ansible_kafka_supported_versions }}"
        - name: wait 10 seconds
          pause:
            seconds: 10
      tags:
        - test_check_mode_topic_delete
        - test_check_mode_topic_update

    - name: delete topic (check mode)
      kafka_lib:
        resource: "topic"
        api_version: "{{ item.protocol_version }}"
        name: "{{ topic_name }}"
        state: absent
        zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
        bootstrap_servers: "{{ bootstrap_plain }}"
      with_items: "{{ ansible_kafka_supported_versions }}"
      check_mode: true
      changed_when: false
      tags: test_check_mode_topic_delete

    - name: update topic (check mode)
      kafka_lib:
        resource: "topic"
        api_version: "{{ item.protocol_version }}"
        name: "{{ topic_name }}"
        partitions: "{{ 1 + topic_defaut_configuration.partitions|int }}"
        replica_factor: "{{ 1 + topic_defaut_configuration.replica_factor|int }}"
        options:
          'retention.ms': 1000
        state: present
        zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
        bootstrap_servers: "{{ bootstrap_plain }}"
      with_items: "{{ ansible_kafka_supported_versions }}"
      check_mode: true
      changed_when: false
      tags: test_check_mode_topic_update

    - name: create topic (check mode)
      kafka_lib:
        resource: "topic"
        api_version: "{{ item.protocol_version }}"
        name: "{{ topic_name }}"
        partitions: "{{ topic_defaut_configuration.partitions }}"
        replica_factor: "{{ topic_defaut_configuration.replica_factor }}"
        options: "{{ topic_defaut_configuration.options|default({}) }}"
        state: present
        zookeeper: "{{ hostvars['zookeeper-' + item.instance_suffix]['ansible_eth0']['ipv4']['address'] }}:2181"
        bootstrap_servers: "{{ bootstrap_plain }}"
      check_mode: true
      changed_when: false
      with_items: "{{ ansible_kafka_supported_versions }}"
      tags: test_check_mode_topic_create

    - name: delete ACL (check mode)
      kafka_lib:
        resource: 'acl'
        api_version: "{{ item.protocol_version }}"
        acl_resource_type: "topic"
        name: "*"
        acl_principal: "User:common"
        acl_operation: "write"
        acl_permission: "allow"
        state: "absent"
        bootstrap_servers: "{{ bootstrap_sasl }}"
        security_protocol: SASL_PLAINTEXT
        sasl_plain_username: admin
        sasl_plain_password: admin-secret
      check_mode: true
      changed_when: false
      with_items: "{{ ansible_kafka_supported_versions }}"
      tags: test_check_mode_acl_delete

    - name: create ACL (check mode)
      kafka_lib:
        resource: 'acl'
        api_version: "{{ item.protocol_version }}"
        acl_resource_type: "topic"
        name: "*"
        acl_principal: "User:common"
        acl_operation: "write"
        acl_permission: "allow"
        state: "present"
        bootstrap_servers: "{{ bootstrap_sasl }}"
        security_protocol: SASL_PLAINTEXT
        sasl_plain_username: admin
        sasl_plain_password: admin-secret
      check_mode: true
      changed_when: false
      with_items: "{{ ansible_kafka_supported_versions }}"
      tags: test_check_mode_acl_create
